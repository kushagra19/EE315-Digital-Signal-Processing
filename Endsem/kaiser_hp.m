function y = kaiser_hp(x)
%KAISER_HP Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.9 and DSP System Toolbox 9.11.
% Generated on: 11-Nov-2021 20:49:55

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % FIR Window Highpass filter designed using the FIR1 function.
    %
    % % All frequency values are in Hz.
    % Fs = 44100;  % Sampling Frequency
    %
    % Fstop = 7100;     % Stopband Frequency
    % Fpass = 8000;     % Passband Frequency
    % Dstop = 0.01;     % Stopband Attenuation
    % Dpass = 0.01;     % Passband Ripple
    % flag  = 'scale';  % Sampling Flag
    %
    % % Calculate the order from the parameters using KAISERORD.
    % [N,Wn,BETA,TYPE] = kaiserord([Fstop Fpass]/(Fs/2), [0 1], [Dpass Dstop]);
    %
    % % Calculate the coefficients using the FIR1 function.
    % b  = fir1(N, Wn, TYPE, kaiser(N+1, BETA), flag);
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [-0.000430829588441524 -0.000964704669675073 ...
        -0.000482951446492494 0.000692755215430922 0.00132682163821405 ...
        0.000543952845056059 -0.0010435508027851 -0.00174374940123385 ...
        -0.000560453555809739 0.00149795664691617 0.00221273977054934 ...
        0.000513769506940651 -0.00207156356856821 -0.00272906602826846 ...
        -0.00038216487917339 0.00278119431930317 0.00328604011801567 ...
        0.000140275721529155 -0.00364567450619645 -0.00387511168160142 ...
        0.000241915802245566 0.00468722636859453 0.00448604855344139 ...
        -0.000800890307023676 -0.0059338855589669 -0.00510719449048547 ...
        0.0015827814555436 0.00742366979939937 0.00572579616690156 ...
        -0.00264908258130476 -0.00921191417617062 -0.00632838799345592 ...
        0.00408716980616201 0.0113847189398154 0.00690122031406724 ...
        -0.00603067930017182 -0.0140851674658763 -0.00743071414842939 ...
        0.00870186248731335 0.0175689540344153 0.00790392402226017 ...
        -0.0125087982256437 -0.0223367834750805 -0.00830898965082315 ...
        0.018302046763978 0.0295045885650833 0.00863555736924908 ...
        -0.0282090537213187 -0.0421248043531652 -0.0088751532411239 ...
        0.0494724625788118 0.0724514586840226 0.00902149168415449 ...
        -0.132832377977945 -0.279968470255555 0.657626195341248 ...
        -0.279968470255555 -0.132832377977945 0.00902149168415449 ...
        0.0724514586840226 0.0494724625788118 -0.0088751532411239 ...
        -0.0421248043531652 -0.0282090537213187 0.00863555736924908 ...
        0.0295045885650833 0.018302046763978 -0.00830898965082315 ...
        -0.0223367834750805 -0.0125087982256437 0.00790392402226017 ...
        0.0175689540344153 0.00870186248731335 -0.00743071414842939 ...
        -0.0140851674658763 -0.00603067930017182 0.00690122031406724 ...
        0.0113847189398154 0.00408716980616201 -0.00632838799345592 ...
        -0.00921191417617062 -0.00264908258130476 0.00572579616690156 ...
        0.00742366979939937 0.0015827814555436 -0.00510719449048547 ...
        -0.0059338855589669 -0.000800890307023676 0.00448604855344139 ...
        0.00468722636859453 0.000241915802245566 -0.00387511168160142 ...
        -0.00364567450619645 0.000140275721529155 0.00328604011801567 ...
        0.00278119431930317 -0.00038216487917339 -0.00272906602826846 ...
        -0.00207156356856821 0.000513769506940651 0.00221273977054934 ...
        0.00149795664691617 -0.000560453555809739 -0.00174374940123385 ...
        -0.0010435508027851 0.000543952845056059 0.00132682163821405 ...
        0.000692755215430922 -0.000482951446492494 -0.000964704669675073 ...
        -0.000430829588441524]);
end

y = step(Hd,double(x));


% [EOF]
